{"version":3,"sources":["pages/NotFound.js","components/animation/Animation.js","components/card/Card.js","algorithms/bubbleSort.js","algorithms/selectionSort.js","algorithms/mergeSort.js","algorithms/quickSort.js","containers/Main.js","pages/Input.js","App.js","reportWebVitals.js","index.js"],"names":["NotFound","Animation","blocks","compare","sorted","swap","useState","Math","min","ceil","window","innerWidth","length","width","color","className","map","block","i","height","bg","includes","style","Card","props","children","arr","j","temp","bubbleSort","dupBlocks","slice","order","push","selectionSort","mergeSortHelper","l","r","mid","floor","merge","mergeSort","quickSortHelper","pivot","random","m","partition","quickSort","App","algorithm","setAlgorithm","setBlocks","sorting","setSorting","setCompare","setSwap","sortedIndex","setSortedIndex","arrayTo","setArrayTo","first","setFirst","loading","setLoading","useEffect","handleSortHelper","sortUsingOrder","loop","setTimeout","k","index","checkArray","id","value","readOnly","onClick","e","location","reload","type","placeholder","onChange","target","split","Number","alert","Main","path","element","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b2af13a.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n        <h1>404</h1>\r\n        <p>Page not found</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport './Animation.css'\r\n\r\nfunction Animation({ blocks, compare, sorted, swap }){\r\n    const [width, _] = useState(Math.min(20, Math.ceil(window.innerWidth / blocks.length)))\r\n    const color = blocks.length <= 50 && width > 14 ? 'black' : 'transparent' // If there are more than 50 numbers\r\n    // the color of the numbers will be transparent otherwise black\r\n\r\n    return (\r\n        <div className='listBlocks'>\r\n\r\n            {blocks.map((block, i) => {\r\n                const height = block * 200 / blocks.length;\r\n                let bg = '#2499FF'\r\n\r\n                // i th element is being compared with some other element\r\n                if(compare && (i === compare[0] || i === compare[1])){\r\n                    bg = '#F59B0A'\r\n                }\r\n                \r\n                // i th element is being swapped with some other element\r\n                if(swap && (i === swap[0] || i === swap[1])){\r\n                    bg='red'\r\n                }\r\n\r\n                // i th element is in its correct position\r\n                if(sorted && sorted.includes(i)){\r\n                    bg = '#4bc52e'\r\n                }\r\n\r\n                const style = {\r\n                    'backgroundColor': bg,\r\n                    'color': color,\r\n                    'height': height, \r\n                    'width': width\r\n                }\r\n                return (<div key={i} className='block' style={style}>{block}</div>)\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Animation\r\n","import React from \"react\";\r\nimport \"./styles.css\";\r\n\r\nexport default function Card(props) {\r\n\r\n  return (\r\n    <div className=\"card\">\r\n        {props.children}\r\n    </div>\r\n  )\r\n}\r\n","const swap = (arr, i, j) => {\r\n    const temp = arr[i]\r\n    arr[i] = arr[j]\r\n    arr[j] = temp\r\n}\r\n\r\nconst bubbleSort = (blocks) => {\r\n\r\n    const dupBlocks = blocks.slice() // copying blocks array\r\n    const order = []\r\n\r\n    let i, j\r\n    \r\n    // It sorts elements one by one, the first loop is for selecting the element that will be sorted\r\n    // the second loop is for comparing the element with the next one\r\n    for (i = 0; i < dupBlocks.length; i++) {\r\n        for (j = 0; j < dupBlocks.length - i - 1; j++) {\r\n\r\n            order.push([j, j + 1, null, null])                  // Compare\r\n            if (dupBlocks[j] > dupBlocks[j + 1]) {\r\n                swap(dupBlocks, j, j + 1)\r\n                order.push([j, j + 1, dupBlocks.slice(), null]) // Swap\r\n            }\r\n        }\r\n        order.push([null, null, null, j]) // j-th element is in correct position ( Sorted )\r\n    }\r\n    return order\r\n}\r\n\r\nexport default bubbleSort\r\n\r\n","const swap = (arr, i, j) => {\r\n    const temp = arr[i]\r\n    arr[i] = arr[j]\r\n    arr[j] = temp\r\n}\r\n\r\nconst selectionSort = (blocks) => {\r\n\r\n    const dupBlocks = blocks.slice() // copying blocks array\r\n    const order = []\r\n\r\n    let i, j\r\n    \r\n    for (i = 0; i < dupBlocks.length; i++) {\r\n        for (j = i + 1; j < dupBlocks.length; j++) {\r\n\r\n            order.push([i, j, null, null])                  // Compare\r\n            if (dupBlocks[i] > dupBlocks[j]) {\r\n                swap(dupBlocks, i, j)\r\n                order.push([i, j, dupBlocks.slice(), null]) // Swap\r\n            }\r\n        }\r\n        order.push([null, null, null, i]) // i-th element is in correct position ( Sorted )\r\n    }\r\n\r\n    return order\r\n}\r\n\r\nexport default selectionSort","let order = []\r\n\r\nconst merge = (dupBlocks, l, mid, r) => {\r\n    let i = l, j = mid + 1\r\n\r\n    const arr = [] \r\n\r\n    while((i <= mid) && (j <= r)){\r\n        order.push([i, j, null, null])      // Compare i th and j th element  \r\n        if(dupBlocks[i] <= dupBlocks[j]){\r\n            arr.push(dupBlocks[i++])\r\n        } else {\r\n            arr.push(dupBlocks[j++])\r\n        }\r\n    }\r\n\r\n    while(i <= mid){\r\n        order.push([i, null, null, null])\r\n        arr.push(dupBlocks[i++])\r\n    }\r\n\r\n    while(j <= r){\r\n        order.push([null, j, null, null])\r\n        arr.push(dupBlocks[j++])\r\n    }\r\n    \r\n    for(i=l;i<=r;i++){\r\n        dupBlocks[i] = arr[i - l]\r\n        order.push([i, null, dupBlocks.slice(), null]) \r\n    }\r\n\r\n}\r\n\r\nconst mergeSortHelper = (dupBlocks, l, r) => {\r\n    if(l >= r) \r\n        return \r\n    \r\n    const mid = Math.floor((l + r) / 2)\r\n\r\n    mergeSortHelper(dupBlocks, l, mid)\r\n    mergeSortHelper(dupBlocks, mid + 1, r) \r\n    \r\n    merge(dupBlocks, l, mid, r)\r\n}\r\n\r\nconst mergeSort = (blocks) => {\r\n    order = []\r\n    const dupBlocks = blocks.slice() // copying blocks array\r\n    \r\n    mergeSortHelper(dupBlocks, 0, dupBlocks.length - 1)\r\n    \r\n    for(let i=0;i<dupBlocks.length;i++){\r\n        order.push([null, null, null, i]) // i th element will be in correct position\r\n    }\r\n\r\n    return order\r\n}\r\n\r\nexport default mergeSort","let order = []\r\n\r\nconst swap = (arr, i, j) => {\r\n    const temp = arr[i]\r\n    arr[i] = arr[j]\r\n    arr[j] = temp\r\n}\r\n\r\nconst partition = (dupBlocks, l, r) => {\r\n    const pivot = l \r\n    let j = l \r\n\r\n    for(let i = l + 1;i<=r;i++){\r\n        order.push([i, pivot, null, null])\r\n        if(dupBlocks[i] < dupBlocks[pivot]){\r\n            j += 1 \r\n            swap(dupBlocks, i, j)\r\n            order.push([i, j, dupBlocks.slice(), null])\r\n        }\r\n    }\r\n\r\n    swap(dupBlocks, pivot, j)\r\n    order.push([pivot, j, dupBlocks.slice(), null])\r\n    order.push([null, null, null, j])\r\n    return j\r\n}\r\n\r\n\r\nconst quickSortHelper = (dupBlocks, l, r) => {\r\n    if(l >= r) {\r\n        if(l === r) order.push([null, null, null, l])\r\n        return\r\n    } \r\n\r\n    const pivot = l + Math.floor(Math.random() * (r - l))\r\n\r\n    swap(dupBlocks, l, pivot)\r\n    order.push([l, pivot, dupBlocks.slice(), null])\r\n\r\n    const m = partition(dupBlocks, l, r)\r\n\r\n    quickSortHelper(dupBlocks, l, m - 1)\r\n    quickSortHelper(dupBlocks, m + 1, r)\r\n\r\n    return\r\n}\r\n\r\nconst quickSort = (blocks) => {\r\n    const dupBlocks = blocks.slice() // Copying blocks array\r\n    order = []\r\n    \r\n    quickSortHelper(dupBlocks, 0, dupBlocks.length - 1)\r\n    \r\n    return order\r\n}\r\n\r\nexport default quickSort\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport Animation from \"../components/animation/Animation\";\r\nimport Card from \"../components/card/Card\";\r\n\r\n// Algorithms\r\nimport bubbleSort from \"../algorithms/bubbleSort\";\r\nimport selectionSort from \"../algorithms/selectionSort\";\r\nimport mergeSort from \"../algorithms/mergeSort\";\r\nimport quickSort from \"../algorithms/quickSort\";\r\n\r\nfunction App() {\r\n  // States\r\n  const [algorithm, setAlgorithm] = useState();\r\n  const [blocks, setBlocks] = useState([]);\r\n  const [sorting, setSorting] = useState(false);\r\n  const [compare, setCompare] = useState([]);\r\n  const [swap, setSwap] = useState([]);\r\n  const [sortedIndex, setSortedIndex] = useState([]);\r\n  const [arrayTo, setArrayTo] = useState([]);\r\n  const [first, setFirst] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (first === 0) {\r\n      setFirst(1);\r\n    } else if (first === 1) {\r\n      handleSortHelper();\r\n      let val = first + 1;\r\n      setFirst(val);\r\n    }\r\n  }, [blocks]);\r\n\r\n  // Sorts the array using the animation\r\n  const sortUsingOrder = (order)  => {\r\n    function loop(i) {\r\n      setTimeout(function () {\r\n        const [j, k, arr, index] = order[i];\r\n        setCompare([j, k]);\r\n        setSwap([]);\r\n\r\n        if (index !== null) {\r\n          setSortedIndex([...sortedIndex, index]);\r\n        }\r\n\r\n        if (arr) {\r\n          setBlocks(arr);\r\n          setSwap([j, k]);\r\n        }\r\n\r\n        if (++i < order.length) {\r\n          loop(i)\r\n        } else {\r\n          setSorting(false);\r\n        }\r\n      }, 150);\r\n    }\r\n    loop(0)\r\n  }\r\n\r\n  // Sorting according to the algorithm\r\n  const handleSortHelper = () => {\r\n    setSorting(true);\r\n\r\n    algorithm === 1\r\n      ? sortUsingOrder(mergeSort(blocks))\r\n      : algorithm === 2\r\n      ? sortUsingOrder(quickSort(blocks))\r\n      : algorithm === 3\r\n      ? sortUsingOrder(bubbleSort(blocks))\r\n      : algorithm === 4\r\n      ? sortUsingOrder(selectionSort(blocks))\r\n      : setSorting(false);\r\n  };\r\n\r\n  const handleArrayChange = (event) => {\r\n    setArrayTo(event.target.value);\r\n  };\r\n\r\n  const checkArray = () => {\r\n    if (arrayTo.length === 0) {\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const handleSortMerge = () => {\r\n    const res = checkArray();\r\n    if (!res) {\r\n      alert(\"Please enter an array\");\r\n    } else {\r\n      setBlocks(arrayTo.split(\",\").map(Number));\r\n      setAlgorithm(1);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSortQuick = () => {\r\n    const res = checkArray();\r\n    if (!res) {\r\n      alert(\"Please enter an array\");\r\n    } else {\r\n      setBlocks(arrayTo.split(\",\").map(Number));\r\n      setAlgorithm(2);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSortBubble = () => {\r\n    const res = checkArray();\r\n    if (!res) {\r\n      alert(\"Please enter an array\");\r\n    } else {\r\n      setBlocks(arrayTo.split(\",\").map(Number));\r\n      setAlgorithm(3);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  const handleSortSelection = () => {\r\n    const res = checkArray();\r\n    if (!res) {\r\n      alert(\"Please enter an array\");\r\n    } else {\r\n      setBlocks(arrayTo.split(\",\").map(Number));\r\n      setAlgorithm(4);\r\n      setLoading(true);\r\n    }\r\n  };\r\n\r\n  return loading ? (\r\n    <Card>\r\n      {\r\n        !sorting && \r\n        <div className=\"header\">\r\n          ¡Array sorted!\r\n        </div>\r\n      }\r\n      <Animation\r\n        blocks={blocks}\r\n        compare={sorting && compare}\r\n        swap={sorting && swap}\r\n        sorted={sortedIndex}\r\n      />\r\n      <div className=\"content\">\r\n        <textarea id=\"result\" value={blocks} readOnly />\r\n      </div>\r\n      <div className=\"footer\">\r\n        <button onClick={(e) => window.location.reload(e)}>Back</button>\r\n      </div>\r\n    </Card>\r\n  ) : (\r\n    <Card>\r\n      <div className=\"header\">\r\n        Type the array to be sorted separated by commas.\r\n      </div>\r\n      <div className=\"content\">\r\n        <input\r\n          type=\"text\"\r\n          id=\"array\"\r\n          placeholder=\"1,2,3,4,5,6,7,8,9,10\"\r\n          onChange={(e) => handleArrayChange(e)}\r\n        />\r\n        <span>Sort using:</span>\r\n      </div>\r\n      <div className=\"footer\">\r\n        <button onClick={handleSortMerge}>Merge Sort</button>\r\n        <button onClick={handleSortQuick}>Quick Sort</button>\r\n        <button onClick={handleSortBubble}>Bubble Sort</button>\r\n        <button onClick={handleSortSelection}>Selection Sort</button>\r\n      </div>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react'\r\nimport Main from '../containers/Main';\r\nimport './styles/input.css'\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"Input\">\r\n        <Main/>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\nimport { BrowserRouter, Route, Routes } from 'react-router-dom'\nimport NotFound from './pages/NotFound';\nimport Input from './pages/Input';\n\nfunction App() {\n  return ( \n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Input />} />\n        <Route exact path=\"*\" element={<NotFound/>} />\n      </Routes>\n    </BrowserRouter>\n  )\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}